<?xml version="1.0" encoding="utf-8"?>
<!-- 4 CSDL XML Document, -->
<!--Example 2 -->
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" xmlns="http://docs.oasis-open.org/odata/ns/edm" Version="4.01">
  <edmx:Reference Uri="https://tinyurl.com/Org-OData-Measures-V1-xml">
    <edmx:Include Alias="Measures" Namespace="Org.OData.Measures.V1" />
    <Annotation Term="Some.Term" />
  </edmx:Reference>
  <edmx:Reference Uri="https://tinyurl.com/Org-OData-Validation-V1-xml">
    <edmx:Include Alias="Validation" Namespace="Org.OData.Validation.V1" />
  </edmx:Reference>
  <edmx:Reference Uri="http://somewhere/Vocabulary/V1">
    <edmx:IncludeAnnotations TermNamespace="Name.Space" TargetNamespace="Target.Space" />
    <edmx:IncludeAnnotations TermNamespace="Name.Space" TargetNamespace="Target.Space" Qualifier="SomeName" />
    <edmx:IncludeAnnotations TermNamespace="Name.Space" Qualifier="SomeName" />
    <edmx:IncludeAnnotations TermNamespace="Name.Space" />
  </edmx:Reference>
  <edmx:Reference Uri="/dev/null">
    <edmx:Include Namespace="Dummy.Namespace1" Alias="Some" />
    <edmx:Include Namespace="Dummy.Namespace2" Alias="custom" />
    <edmx:Include Namespace="Dummy.Namespace3" Alias="A" />
    <edmx:Include Namespace="Dummy.Namespace4" Alias="An" />
    <edmx:Include Namespace="Dummy.Namespace5" Alias="Is" />
    <edmx:Include Namespace="Dummy.Namespace6" Alias="SomeModel" />
    <edmx:Include Namespace="Dummy.Namespace7" Alias="SearchVocabulary" />
    <edmx:Include Namespace="Org.OData.Communication.V1" Alias="Communication" />
    <edmx:Include Namespace="org.example.seo" Alias="seo" />
  </edmx:Reference>
  <edmx:Reference Uri="https://example.org/vocabs/person">
    <edmx:Include Namespace="org.example.person" Alias="person" />
  </edmx:Reference>
  <!-- 4.1 Reference -->
  <!-- Example 3 -->
  <!-- 4.2 Included Schema -->
  <!-- Example 4 -->
  <edmx:Reference Uri="https://tinyurl.com/Org-OData-Capabilities-V1-xml">
    <edmx:Include Namespace="Org.OData.Capabilities.V1" Alias="Capabilities" />
  </edmx:Reference>
  <edmx:Reference Uri="http://vocabs.odata.org/core/v1">
    <edmx:Include Namespace="Org.OData.Core.V1" Alias="Core">
      <Annotation Term="Core.DefaultNamespace" />
    </edmx:Include>
  </edmx:Reference>
  <edmx:Reference Uri="http://example.org/display/v1">
    <edmx:Include Alias="UI" Namespace="org.example.display" />
    <edmx:Include Alias="task" Namespace="org.example.task" />
    <edmx:Include Alias="vCard" Namespace="org.example.vCard" />
    <edmx:Include Namespace="anotherOne" />
  </edmx:Reference>
  <!-- 4.3 Included Annotations -->
  <!-- Example 5 -->
  <edmx:Reference Uri="http://odata.org/ann/b">
    <edmx:IncludeAnnotations TermNamespace="org.example.validation" />
    <edmx:IncludeAnnotations TermNamespace="org.example.display" Qualifier="Tablet" />
    <edmx:IncludeAnnotations TermNamespace="org.example.hcm" TargetNamespace="com.example.Sales" />
    <edmx:IncludeAnnotations TermNamespace="org.example.hcm" Qualifier="Tablet" TargetNamespace="com.example.Person" />
  </edmx:Reference>
  <edmx:DataServices>

    <Schema Namespace="First" />
    <!-- 5 Schema -->
    <!-- 5.1 Alias -->
    <!-- Example 6 -->
    <Schema Namespace="org.example" Alias="self">
      <Annotation Term="Core.Description" String="Example schema" />

      <!-- 5.2 Annotations with External Targeting -->
      <!-- Example 7 -->
      <Annotations Target="org.example.Person" Qualifier="Tablet">
        <Annotation Term="Core.Description" String="Dummy" />
      </Annotations>


      <!-- 6 Entity Type, Example 8: a simple entity type -->
      <EntityType Name="Employee">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Name="ID" Type="Edm.String" Nullable="false" />
        <Property Name="FirstName" Type="Edm.String" Nullable="false" />
        <Property Name="LastName" Type="Edm.String" Nullable="false" />
        <NavigationProperty Name="Manager" Type="self.Manager" />
      </EntityType>

      <!-- Example 9: a derived entity type based on the previous example -->
      <EntityType Name="Manager" BaseType="self.Employee">
        <Property Name="AnnualBudget" Type="Edm.Decimal" />
        <NavigationProperty Name="Employees" Type="Collection(self.Employee)" />
      </EntityType>

      <!-- no examples yet -->
      <EntityType Name="Nothing" Abstract="true" OpenType="false" HasStream="false" />
      <EntityType Name="NotMuch" Abstract="false" OpenType="true" HasStream="true" />

      <!-- Example 10: entity type with a simple key -->
      <EntityType Name="Category10">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Name="ID" Type="Edm.Int32" Nullable="false" />
        <Property Name="Name" Type="Edm.String">
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
      </EntityType>

      <!-- Example 11: entity type with a simple key referencing a property of a complex type -->
      <EntityType Name="Category11">
        <Key>
          <PropertyRef Name="Info/ID" Alias="EntityInfoID" />
        </Key>
        <Property Name="Info" Type="self.EntityInfo" Nullable="false" />
        <Property Name="Name" Type="Edm.String" />
      </EntityType>

      <ComplexType Name="EntityInfo">
        <Property Name="ID" Type="Edm.Int32" Nullable="false" />
        <Property Name="Created" Type="Edm.DateTimeOffset" />
      </ComplexType>

      <!-- Example 12: entity type with a composite key -->
      <EntityType Name="OrderLine">
        <Key>
          <PropertyRef Name="OrderID" />
          <PropertyRef Name="LineNumber" />
        </Key>
        <Property Name="OrderID" Type="Edm.Int32" Nullable="false" />
        <Property Name="LineNumber" Type="Edm.Int32" Nullable="false" />
      </EntityType>

      <!-- Example 13-14: URLs, not relevant here -->


      <!-- 7 Structural Property -->
      <!-- Example 15 -->
      <ComplexType Name="Measurement">
        <Property Name="Dimension" Type="Edm.String" Nullable="false" MaxLength="50" DefaultValue="Unspecified" />
        <Property Name="Length" Type="Edm.Decimal" Nullable="false" Precision="18" Scale="2" />
      </ComplexType>

      <ComplexType Name="Example16to21">
        <!-- Example 16 -->
        <Property Name="Units" Type="Collection(Edm.String)" />
        <!-- Example 17 -->
        <Property Name="SuggestedTimes" Type="Collection(Edm.DateTimeOffset)" Precision="6" />
        <!-- Example 18 -->
        <Property Name="Amount32" Type="Edm.Decimal" Precision="3" Scale="2" />
        <!-- Example 19 -->
        <Property Name="Amount22" Type="Edm.Decimal" Precision="2" Scale="2" />
        <!-- Example 20 -->
        <Property Name="Amount3v" Type="Edm.Decimal" Precision="3" Scale="variable" />
        <!-- Example 21 -->
        <Property Name="Amount7f" Type="Edm.Decimal" Precision="7" Scale="floating" />
      </ComplexType>


      <!-- 8 Navigation Property -->
      <!-- Example 22-24 -->
      <EntityType Name="Product">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Type="Edm.String" Name="ID" Nullable="false" />
        <Property Name="CategoryID" Type="Edm.String" Nullable="false" />
        <Property Name="CategoryKind" Type="Edm.String" Nullable="true" />
        <NavigationProperty Name="Category" Type="self.Category" Nullable="false" ContainsTarget="false"
          Partner="Products"
        >
          <ReferentialConstraint Property="CategoryID" ReferencedProperty="ID" />
          <ReferentialConstraint Property="CategoryKind" ReferencedProperty="Kind">
            <Annotation Term="Core.Description" String="Referential Constraint to non-key property" />
          </ReferentialConstraint>
        </NavigationProperty>
        <NavigationProperty Name="Supplier" Type="self.Supplier" />
      </EntityType>

      <EntityType Name="Supplier" OpenType="false">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Type="Edm.String" Name="ID" Nullable="false" Unicode="true" />
      </EntityType>

      <EntityType Name="Customer">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Type="Edm.String" Name="ID" Nullable="false" Unicode="false" />
      </EntityType>

      <EntityType Name="Order">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Type="Edm.Int64" Name="ID" Nullable="false" />
      </EntityType>

      <EntityType Name="Category">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Type="Edm.String" Name="ID" Nullable="false" />
        <Property Type="Edm.String" Name="Kind" Nullable="true" />
        <NavigationProperty Name="Products" Type="Collection(self.Product)" Partner="Category">
          <OnDelete Action="Cascade">
            <Annotation Term="Core.Description" String="Delete all products in this category" />
          </OnDelete>
        </NavigationProperty>
      </EntityType>


      <!-- 9 Complex Type -->
      <!-- Example 25: a complex type used by two entity types -->
      <ComplexType Name="Dimensions">
        <Property Name="Height" Nullable="false" Type="Edm.Decimal" />
        <Property Name="Weight" Nullable="false" Type="Edm.Decimal" />
        <Property Name="Length" Nullable="false" Type="Edm.Decimal" />
      </ComplexType>

      <EntityType Name="Product25">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Name="ID" Type="Edm.String" Nullable="false" />
        <Property Name="ProductDimensions" Type="self.Dimensions" />
        <Property Name="ShippingDimensions" Type="self.Dimensions" />
      </EntityType>

      <EntityType Name="ShipmentBox">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Name="ID" Type="Edm.String" Nullable="false" />
        <Property Name="Dimensions" Type="self.Dimensions" />
      </EntityType>

      <!-- no examples yet -->
      <ComplexType Name="NothingC" Abstract="true" OpenType="false" />
      <ComplexType Name="NotMuchC" Abstract="false" OpenType="true" BaseType="self.NothingC" />


      <!-- 10 Enumeration Type -->
      <!-- Example 26: a simple flags-enabled enumeration -->
      <EnumType Name="FileAccess" UnderlyingType="Edm.Int32" IsFlags="true">
        <Member Name="Read" Value="1" />
        <Member Name="Write" Value="2" />
        <Member Name="Create" Value="4" />
        <Member Name="Delete" Value="8" />
      </EnumType>

      <!-- Example 27: pattern values can be combined, and some combined values have explicit names -->
      <EnumType Name="Pattern" UnderlyingType="Edm.Int32" IsFlags="true">
        <Member Name="Plain" Value="0" />
        <Member Name="Red" Value="1" />
        <Member Name="Blue" Value="2" />
        <Member Name="Yellow" Value="4" />
        <Member Name="Solid" Value="8" />
        <Member Name="Striped" Value="16" />
        <Member Name="SolidRed" Value="9" />
        <Member Name="SolidBlue" Value="10" />
        <Member Name="SolidYellow" Value="12" />
        <Member Name="RedBlueStriped" Value="19" />
        <Member Name="BlueRedStriped" Value="19" />
        <Member Name="RedYellowStriped" Value="21" />
        <Member Name="BlueYellowStriped" Value="22" />
      </EnumType>

      <!--
        Example 28: FirstClass has a value of 0, TwoDay a value of 1, and Overnight a value of 2 -->
      <EnumType Name="ShippingMethod">
        <Annotation Term="Core.Description" String="Method of shipping" />
        <Member Name="FirstClass">
          <Annotation Term="Core.Description" String="Shipped with highest priority" />
        </Member>
        <Member Name="TwoDay">
          <Annotation Term="Core.Description" String="Shipped within two days" />
        </Member>
        <Member Name="Overnight">
          <Annotation Term="Core.Description" String="Shipped overnight" />
        </Member>
      </EnumType>


      <!-- 11 Type Definition -->
      <!-- Example 29 -->
      <TypeDefinition Name="Length" UnderlyingType="Edm.Int32">
        <Annotation Term="Org.OData.Measures.V1.Unit" String="Centimeters" />
      </TypeDefinition>

      <TypeDefinition Name="Weight" UnderlyingType="Edm.Int32">
        <Annotation Term="Org.OData.Measures.V1.Unit" String="Kilograms" />
      </TypeDefinition>

      <ComplexType Name="Size">
        <Property Name="Height" Type="self.Length" />
        <Property Name="Weight" Type="self.Weight" />
      </ComplexType>


      <!-- 12 Action and Function -->

      <!-- no examples yet -->
      <Action Name="Approval" IsBound="true">
        <Parameter Name="binding" Type="self.Order" />
      </Action>

      <Action Name="Logout" IsBound="false" />

      <Function Name="ProductsByRating" IsBound="false" IsComposable="false">
        <Parameter Name="Rating" Type="Edm.Decimal" Precision="4" Scale="0" Nullable="false" />
        <ReturnType Type="Collection(self.Product)" />
      </Function>

      <!-- Example 30: a function returning the top-selling products for a given year. In this case the year must be specified
        as a parameter of the function with the edm:Parameter element. -->
      <Function Name="TopSellingProducts">
        <Parameter Name="Year" Type="Edm.Decimal" Precision="4" Scale="0" />
        <ReturnType Type="Collection(self.Product)" />
      </Function>
      <!-- no example yet: overload without parameters -->
      <Function Name="TopSellingProducts" IsComposable="true">
        <ReturnType Type="Collection(self.Product)" />
      </Function>

      <!-- 13 Entity Container -->
      <EntityContainer Name="DemoService">
        <!-- Example 31: one entity set per entity type - covered by example 32 -->
        <!-- Example 32: three entity sets referring to the two entity types -->
        <EntitySet Name="StandardCustomers" EntityType="self.Customer" IncludeInServiceDocument="true">
          <NavigationPropertyBinding Path="Orders" Target="Orders" />
        </EntitySet>
        <EntitySet Name="HiddenEntitySet" EntityType="self.Customer" IncludeInServiceDocument="false" />
        <EntitySet Name="PreferredCustomers" EntityType="self.Customer">
          <NavigationPropertyBinding Path="Orders" Target="Orders" />
        </EntitySet>
        <EntitySet Name="Orders" EntityType="self.Order" />

        <!-- Example 33: An entity container aggregates entity sets, singletons, action imports, and function imports. -->
        <EntitySet Name="Products" EntityType="self.Product">
          <Annotation Term="org.example.display.DisplayName" String="Product Catalog" />
          <NavigationPropertyBinding Path="Category" Target="self.DemoService/Categories" />
          <NavigationPropertyBinding Path="Supplier" Target="self.DemoService/Suppliers" />
        </EntitySet>
        <EntitySet Name="Categories" EntityType="self.Category">
          <NavigationPropertyBinding Path="Products" Target="org.example.DemoService/Products" />
        </EntitySet>
        <EntitySet Name="Suppliers" EntityType="self.Supplier">
          <Annotation Term="org.example.display.DisplayName">
            <String>Supplier Directory</String>
          </Annotation>
          <NavigationPropertyBinding Path="Products" Target="self.DemoService/Products" />
        </EntitySet>
        <Singleton Name="MainSupplier" Type="self.Supplier" />
        <Singleton Name="OptionalAlternativeSupplier" Nullable="true" Type="self.Supplier" />
        <ActionImport Name="LeaveRequestApproval" Action="self.Approval" />
        <FunctionImport Name="ProductsByRating" Function="self.ProductsByRating" EntitySet="Products" />
        <FunctionImport Name="AdvertisedFunctionImport" Function="self.ProductsByRating" IncludeInServiceDocument="true" />
        <FunctionImport Name="HiddenFunctionImport" Function="self.ProductsByRating" IncludeInServiceDocument="false" />

        <!-- Example 34: see miscellaneous2.xml -->

        <!-- Example 35: for an entity set in the same container as the enclosing entity set -->
        <EntitySet Name="Categories34" EntityType="org.example.Category">
          <NavigationPropertyBinding Path="Products" Target="SomeSet" />
        </EntitySet>

        <!-- Example 36: for an entity set in any container in scope -->
        <EntitySet Name="Categories35" EntityType="org.example.Category">
          <NavigationPropertyBinding Path="Products" Target="SomeModel.SomeContainer/SomeSet" />
        </EntitySet>

        <!-- Example 37: binding Suppliers on Products contained within Categories -->
        <EntitySet Name="Categories37" EntityType="self.Category">
          <NavigationPropertyBinding Path="Products/Supplier" Target="Suppliers" />
        </EntitySet>
      </EntityContainer>


      <!-- 14 Vocabulary and Annotation -->
      <!--
        Example 38: the Product entity type is extended with a DisplayName by a metadata annotation that binds the term
        DisplayName to the value of the property Name. The Product entity type also includes an annotation that allows its
        instances
        to be viewed as instances of the type specified by the term SearchResult
      -->
      <EntityType Name="Product2">
        <Key>
          <PropertyRef Name="ID" />
        </Key>
        <Property Name="ID" Nullable="false" Type="Edm.Int32" />
        <Property Name="Name" Type="Edm.String" />
        <Property Name="Description" Type="Edm.String" />
        <Annotation Term="UI.DisplayName" Path="Name" />
        <Annotation Term="SearchVocabulary.SearchResult">
          <Record>
            <PropertyValue Property="Title" Path="Name" />
            <PropertyValue Property="Abstract" Path="Description" />
            <PropertyValue Property="Url">
              <Apply Function="odata.concat">
                <String>Products(</String>
                <Path>ID</Path>
                <String>)</String>
              </Apply>
            </PropertyValue>
          </Record>
        </Annotation>
      </EntityType>

      <!--
        Example 39: the IsURL term can be applied to properties and terms that are of type Edm.String (the Core.Tag type
        and the two Core terms are defined in [OData-VocCore])
      -->
      <Term Name="IsURL" Type="Core.Tag" Nullable="false" DefaultValue="true" AppliesTo="Property">
        <Annotation Term="Core.Description">
          <String>Properties and terms annotated with this term MUST contain a valid URL</String>
        </Annotation>
        <Annotation Term="Core.RequiresType" String="Edm.String" />
      </Term>

      <!-- Example 40: term Measures.ISOCurrency, once annotated with constant value, once with path value -->
      <ComplexType Name="Example40">
        <Property Name="AmountInReportingCurrency" Type="Edm.Decimal">
          <Annotation Term="Measures.ISOCurrency" String="USD">
            <Annotation Term="Core.Description" String="The parent company’s currency" />
          </Annotation>
        </Property>
        <Property Name="AmountInTransactionCurrency" Type="Edm.Decimal">
          <Annotation Term="Measures.ISOCurrency" Path="Currency" />
        </Property>
        <Property Name="Currency" Type="Edm.String" MaxLength="3" />
      </ComplexType>

      <Annotations Target="self.Person">
        <!--Example 41: annotation should only be applied to tablet devices -->
        <Annotation Term="org.example.display.DisplayName" Path="FirstName" Qualifier="Tablet" />
      </Annotations>

      <!-- Example 42: Target expressions -->
      <Annotations Target="self.MyEntityType">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="org.example.MyEntityType/MyProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityType/MyNavigationProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyComplexType">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyComplexType/MyProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyComplexType/MyNavigationProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEnumType">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEnumType/MyMember">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyTypeDefinition">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyTerm">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MySingleton">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyActionImport">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyFunctionImport">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyAction">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="org.example.MyAction(org.example.MyBindingType)">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyFunction">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="org.example.MyFunction(org.example.MyBindingParamType,NonBindingParamName1)">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyFunction(NonBindingParamName1,NonBindingParamName2)">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyFunction/MyParameter">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet/MyProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet/MyNavigationProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet/self.MyEntityType/MyProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet/self.MyEntityType/MyNavProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet/MyComplexProperty/MyProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MyEntitySet/MyComplexProperty/MyNavigationProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>
      <Annotations Target="self.MyEntityContainer/MySingleton/MyComplexProperty/MyNavigationProperty">
        <Annotation Term="self.Dummy" />
      </Annotations>


      <Annotations Target="self.ConstantExpressions">

        <!-- Example 43: base64url-encoded binary value (OData) -->
        <Annotation Term="org.example.display.Thumbnail" Binary="T0RhdGE" />
        <Annotation Term="org.example.display.Thumbnail" Qualifier="element">
          <Binary>T0RhdGE</Binary>
        </Annotation>

        <!-- Example 44 -->
        <Annotation Term="org.example.display.ReadOnly" Bool="true" />
        <Annotation Term="org.example.display.ReadOnly" Qualifier="element">
          <Bool>true</Bool>
        </Annotation>

        <!-- Example 45 -->
        <Annotation Term="org.example.vCard.birthDay" Date="2000-01-01" />
        <Annotation Term="org.example.vCard.birthDay" Qualifier="element">
          <Date>2000-01-01</Date>
        </Annotation>

        <!-- Example 46 -->
        <Annotation Term="org.example.display.LastUpdated" DateTimeOffset="2000-01-01T16:00:00.000Z" />
        <Annotation Term="org.example.display.LastUpdated" Qualifier="element">
          <DateTimeOffset>2000-01-01T16:00:00.000-09:00</DateTimeOffset>
        </Annotation>

        <!-- Example 47 -->
        <Annotation Term="org.example.display.Width" Decimal="3.14" />
        <!-- Example 48 -->
        <Annotation Term="org.example.display.Width" Qualifier="element">
          <Decimal>3.14</Decimal>
        </Annotation>

        <!-- Example 49 -->
        <Annotation Term="org.example.task.duration" Duration="P7D" />
        <Annotation Term="org.example.task.duration" Qualifier="element">
          <Duration>P11DT23H59M59.999999999999S</Duration>
        </Annotation>

        <!-- Example 50: single value -->
        <Annotation Term="org.example.HasPattern" EnumMember="org.example.Pattern/Red" />
        <Annotation Term="org.example.HasPattern" Qualifier="element">
          <EnumMember>org.example.Pattern/Red</EnumMember>
        </Annotation>

        <!-- Example 51: combined value for IsFlags enumeration type -->
        <Annotation Term="org.example.HasPattern" Qualifier="list"
          EnumMember="org.example.Pattern/Red org.example.Pattern/Striped" />
        <Annotation Term="org.example.HasPattern" Qualifier="listelement">
          <EnumMember>org.example.Pattern/Red org.example.Pattern/Striped</EnumMember>
        </Annotation>

        <!-- Example 52 -->
        <Annotation Term="org.example.display.FloatWidth" Float="3.14" />
        <Annotation Term="org.example.display.FloatWidth" Qualifier="element">
          <Float>3.14</Float>
        </Annotation>
        <Annotation Term="org.example.display.FloatWidth" Qualifier="INF">
          <Float>INF</Float>
        </Annotation>

        <!-- Example 53 -->
        <Annotation Term="org.example.display.Id" Guid="21EC2020-3AEA-1069-A2DD-08002B30309D" />
        <Annotation Term="org.example.display.Id" Qualifier="element">
          <Guid>21EC2020-3AEA-1069-A2DD-08002B30309D</Guid>
        </Annotation>

        <!-- Example 54 -->
        <Annotation Term="org.example.display.IntWidth" Int="42" />
        <!-- Example 55 -->
        <Annotation Term="org.example.display.IntWidth" Qualifier="element">
          <Int>42</Int>
        </Annotation>

        <!-- Example 56 -->
        <Annotation Term="org.example.display.DisplayName" String="Product Catalog" />
        <Annotation Term="org.example.display.DisplayName" Qualifier="element">
          <String>Product Catalog</String>
        </Annotation>

        <!-- Example 57 -->
        <Annotation Term="org.example.display.EndTime" TimeOfDay="21:45:00" />
        <Annotation Term="org.example.display.EndTime" Qualifier="element">
          <TimeOfDay>21:45:00</TimeOfDay>
        </Annotation>
      </Annotations>

      <Annotations Target="self.DynamicExpression">
        <!-- Path Expressions -->
        <Annotation Term="self.Dummy">
          <Collection>
            <!-- Example 58 -->
            <PropertyPath>/self.MyEntityContainer/MyEntitySet</PropertyPath>
            <PropertyPath>/self.MyEntityContainer/MyEntitySet/MyProperty</PropertyPath>
            <!-- Example 59 -->
            <PropertyPath>Address/City</PropertyPath>
            <!-- Example 60 -->
            <PropertyPath>DirectReports/self.Manager/DirectReports</PropertyPath>
            <!-- Example 61 -->
            <PropertyPath>Address/City/@Capabilities.SortRestrictions/Sortable</PropertyPath>
            <!-- Example 61 -->
            <PropertyPath>Orders/Items/Product</PropertyPath>
            <!-- Example 63 -->
            <PropertyPath>Addresses/Street</PropertyPath>
            <PropertyPath>Addresses/$count</PropertyPath>
            <!-- Example 64 -->
            <PropertyPath>Orders/Items@Capabilities.InsertRestrictions/Insertable</PropertyPath>
            <!-- Example 65 -->
            <Path>/self.container/SettingsCollection('FeatureXxx')/IsAvailable</Path>
            <Path>/self.container/Products(ID=ProductID)/Name</Path>
          </Collection>
        </Annotation>

        <!-- Example 66 -->
        <Annotation Term="UI.ReferenceFacet" AnnotationPath="Product/Supplier/@UI.LineItem" />
        <Annotation Term="UI.CollectionFacet" Qualifier="Contacts">
          <Collection>
            <AnnotationPath>Supplier/@Communication.Contact</AnnotationPath>
            <AnnotationPath>Customer/@Communication.Contact</AnnotationPath>
          </Collection>
        </Annotation>

        <!-- Example 67 -->
        <Annotation Term="org.example.MyFavoriteModelElement" ModelElementPath="/org.example.someAction" />

        <Annotation Term="org.example.MyFavoriteModelElement" Qualifier="element">
          <ModelElementPath>/org.example.someAction</ModelElementPath>
        </Annotation>

        <!-- Example 68 -->
        <Annotation Term="UI.HyperLink" NavigationPropertyPath="Supplier" />
        <Annotation Term="Capabilities.UpdateRestrictions" Qualifier="element">
          <Record>
            <PropertyValue Property="NonUpdatableNavigationProperties">
              <Collection>
                <NavigationPropertyPath>Supplier</NavigationPropertyPath>
                <NavigationPropertyPath>Category</NavigationPropertyPath>
              </Collection>
            </PropertyValue>
          </Record>
        </Annotation>

        <!-- Example 69 -->
        <Annotation Term="UI.RefreshOnChangeOf" PropertyPath="ChangedAt" />
        <Annotation Term="Capabilities.UpdateRestrictions" Qualifier="element2">
          <Record>
            <PropertyValue Property="NonUpdatableProperties">
              <Collection>
                <PropertyPath>CreatedAt</PropertyPath>
                <PropertyPath>ChangedAt</PropertyPath>
              </Collection>
            </PropertyValue>
          </Record>
        </Annotation>

        <!-- Example 70 -->
        <Annotation Term="org.example.display.DisplayName" Path="FirstName" />
        <Annotation Term="org.example.display.DisplayName" Qualifier="element">
          <Path>@vCard.Address#work/FullName</Path>
        </Annotation>

        <!-- Example 71 -->
        <Annotation Term="A.ComparisonAndLogicalOperators">
          <Collection>
            <And>
              <Path>IsMale</Path>
              <Path>IsMarried</Path>
            </And>
            <Or>
              <Path>IsMale</Path>
              <Path>IsMarried</Path>
              <Annotation Term="A.B" />
            </Or>
            <Not>
              <Annotation Term="A.B" />
              <Path>IsMale</Path>
            </Not>
            <Eq>
              <Null />
              <Path>IsMale</Path>
              <Annotation Term="A.B" />
            </Eq>
            <Ne>
              <Null />
              <Path>IsMale</Path>
            </Ne>
            <Gt>
              <Path>Price</Path>
              <Int>20</Int>
            </Gt>
            <Ge>
              <Path>Price</Path>
              <Int>10</Int>
            </Ge>
            <Lt>
              <Path>Price</Path>
              <Int>20</Int>
            </Lt>
            <Le>
              <Path>Price</Path>
              <Int>100</Int>
            </Le>
            <Has>
              <Path>Fabric</Path>
              <EnumMember>org.example.Pattern/Red</EnumMember>
            </Has>
            <In>
              <Path>Size</Path>
              <Collection>
                <String>XS</String>
                <String>S</String>
              </Collection>
            </In>
          </Collection>
        </Annotation>

        <!-- Example 72 -->
        <Annotation Term="A.ArithmeticOperators">
          <Collection>
            <Add>
              <Path>StartDate</Path>
              <Path>Duration</Path>
            </Add>
            <Sub>
              <Path>Revenue</Path>
              <Path>Cost</Path>
            </Sub>
            <Neg>
              <Path>Height</Path>
            </Neg>
            <Mul>
              <Path>NetPrice</Path>
              <Path>TaxRate</Path>
            </Mul>
            <Div>
              <Path>Quantity</Path>
              <Path>QuantityPerParcel</Path>
            </Div>
            <DivBy>
              <Path>Quantity</Path>
              <Path>QuantityPerParcel</Path>
            </DivBy>
            <Mod>
              <Path>Quantity</Path>
              <Path>QuantityPerParcel</Path>
            </Mod>
          </Collection>
        </Annotation>

        <!-- TODO: Renumber examples from here: +3 -->

        <!-- Example 73 -->
        <Annotation Term="org.example.display.DisplayName" Qualifier="apply">
          <Apply Function="odata.concat">
            <String>Product: </String>
            <Path>ProductName</Path>
            <String> (</String>
            <Path>Available/Quantity</Path>
            <String> </String>
            <Path>Available/Unit</Path>
            <String> available)</String>
          </Apply>
        </Annotation>

        <!-- Example 74: assuming there are no special characters in values of the NameOfMovieGenre property -->
        <Annotation Term="Some.Term" Qualifier="Example71">
          <Apply Function="odata.fillUriTemplate">
            <String>http://host/someAPI/Actors/{actorName}/CV</String>
            <LabeledElement Name="actorName" Path="Actor/Name" />
          </Apply>
        </Annotation>

        <!-- Example 75: all FirstName values not containing one of the letters b, c, or d evaluate to true -->
        <Annotation Term="Some.Term" Qualifier="Example72">
          <Apply Function="odata.matchesPattern">
            <Path>FirstName</Path>
            <String>[^b-d]+$</String>
          </Apply>
        </Annotation>

        <!-- Example 76 -->
        <Annotation Term="Some.Term" Qualifier="Example73">
          <Apply Function="odata.fillUriTemplate">
            <String>http://host/service/Genres({genreName})</String>
            <LabeledElement Name="genreName">
              <Apply Function="odata.uriEncode">
                <Path>NameOfMovieGenre</Path>
              </Apply>
            </LabeledElement>
          </Apply>
        </Annotation>

        <!-- Example 77 -->
        <Annotation Term="org.example.display.Threshold">
          <Cast Type="Edm.Decimal">
            <Path>Average</Path>
          </Cast>
        </Annotation>

        <!-- Example 78 -->
        <Annotation Term="org.example.seo.SeoTerms">
          <Collection>
            <String>Product</String>
            <String>Supplier</String>
            <String>Customer</String>
          </Collection>
        </Annotation>

        <!-- Example 79 -->
        <Annotation Term="org.example.person.Gender">
          <If>
            <Path>IsFemale</Path>
            <String>Female</String>
            <String>Male</String>
          </If>
        </Annotation>

        <!-- Example 80 -->
        <Annotation Term="self.IsPreferredCustomer">
          <IsOf Type="self.PreferredCustomer">
            <Path>Customer</Path>
          </IsOf>
        </Annotation>

        <!-- Example 81 -->
        <Annotation Term="org.example.display.DisplayName" Qualifier="LE">
          <LabeledElement Name="CustomerFirstName" Path="FirstName" />
        </Annotation>
        <Annotation Term="org.example.display.DisplayName" Qualifier="LEelement">
          <LabeledElement Name="CustomerFirstName">
            <Path>FirstName</Path>
          </LabeledElement>
        </Annotation>

        <!-- Example 82 -->
        <Annotation Term="org.example.display.DisplayName" Qualifier="LEref">
          <LabeledElementReference>self.CustomerFirstName</LabeledElementReference>
        </Annotation>

        <!-- Example 83 -->
        <Annotation Term="org.example.display.DisplayName" Qualifier="null">
          <Null />
        </Annotation>
        <!-- Example 84 -->
        <Annotation Term="org.example.display.DisplayName" Qualifier="nullWithAnnotation">
          <Null>
            <Annotation Term="org.example.Reason" String="Private">
            </Annotation>
          </Null>
        </Annotation>

        <!-- Example 85: record with two structural and two navigation properties -->
        <Annotation Term="org.example.person.Employee">
          <Record Type="org.example.person.Manager">
            <Annotation Term="Core.Description" String="Annotation on record" />
            <PropertyValue Property="GivenName" Path="FirstName">
              <Annotation Term="Core.Description" String="Annotation on record member" />
            </PropertyValue>
            <PropertyValue Property="Surname" Path="LastName" />
            <PropertyValue Property="Manager" Path="DirectSupervisor" />
            <PropertyValue Property="CostCenter">
              <UrlRef>
                <Apply Function="odata.fillUriTemplate">
                  <String>http://host/anotherservice/CostCenters('{ccid}')</String>
                  <LabeledElement Name="ccid" Path="CostCenterID" />
                </Apply>
              </UrlRef>
            </PropertyValue>
          </Record>
        </Annotation>

        <!-- Example 86 -->
        <Annotation Term="org.example.person.Supplier">
          <UrlRef>
            <Apply Function="odata.fillUriTemplate">
              <String>http://host/service/Suppliers({suppID})</String>
              <LabeledElement Name="suppID">
                <Apply Function="odata.uriEncode">
                  <Path>SupplierId</Path>
                </Apply>
              </LabeledElement>
            </Apply>
          </UrlRef>
        </Annotation>

        <Annotation Term="Core.LongDescription" Qualifier="element">
          <UrlRef>
            <String>http://host/wiki/HowToUse</String>
          </UrlRef>
        </Annotation>

        <Annotation Term="Core.LongDescription" UrlRef="http://host/wiki/HowToUse" />
      </Annotations>
    </Schema>

    <Schema Namespace="Model1" Alias="M1">
      <ComplexType Name="NullablePrimitiveTypes">
        <Property Name="NullValue" Type="Edm.Boolean" DefaultValue="null" />
        <Property Name="TrueValue" Type="Edm.Boolean" DefaultValue="true" />
        <Property Name="FalseValue" Type="Edm.Boolean" DefaultValue="false" />
        <Property Name="BinaryValue" Type="Edm.Binary" MaxLength="31" DefaultValue="T0RhdGE" />
        <Property Name="IntegerValue" Type="Edm.Int32" DefaultValue="-128" />
        <Property Name="DoubleValue" Type="Edm.Double" DefaultValue="3.1415926535897931" />
        <Property Name="SingleValue" Type="Edm.Single" />
        <Property Name="DecimalValue" Type="Edm.Decimal" Scale="variable" DefaultValue="34.95" />
        <Property Name="StringValue" Type="Edm.String" DefaultValue="Say &quot;Hello&quot;,&#x0A;then go" />
        <Property Name="DateValue" Type="Edm.Date" DefaultValue="2012-12-03" />
        <Property Name="DateTimeOffsetValue" Type="Edm.DateTimeOffset" DefaultValue="2012-12-03T07:16:23Z" />
        <Property Name="DurationValue" Type="Edm.Duration" Precision="12" DefaultValue="P12DT23H59M59.999999999999S" />
        <Property Name="TimeOfDayValue" Type="Edm.TimeOfDay" Precision="6" DefaultValue="07:59:59.999" />
        <Property Name="GuidValue" Type="Edm.Guid" DefaultValue="1234567-89ab-cdef-0123-456789abcdef" />
        <Property Name="Int64Value" Type="Edm.Int64" DefaultValue="0" />
        <Property Name="ColorEnumValue" Type="M1.Color" DefaultValue="yellow" />
        <Property Name="GeographyPoint" Type="Edm.GeographyPoint" DefaultValue="SRID=0;Point(142.1 64.1)" />
        <Property Name="StreamValue" Type="Edm.Stream" />
        <Property Name="TypeDefValue" Type="M1.IntegerDecimal" Precision="20" DefaultValue="42" />
        <Property Name="PrimitiveValue" Type="Edm.PrimitiveType" />
      </ComplexType>

      <ComplexType Name="NonNullablePrimitiveTypes">
        <Property Name="NullValue" Type="Edm.Boolean" DefaultValue="null" Nullable="false" />
        <Property Name="TrueValue" Type="Edm.Boolean" DefaultValue="true" Nullable="false" />
        <Property Name="FalseValue" Type="Edm.Boolean" DefaultValue="false" Nullable="false" />
        <Property Name="BinaryValue" Type="Edm.Binary" MaxLength="31" DefaultValue="T0RhdGE" Nullable="false" />
        <Property Name="IntegerValue" Type="Edm.Int32" DefaultValue="-128" Nullable="false" />
        <Property Name="DoubleValue" Type="Edm.Double" DefaultValue="3.1415926535897931" Nullable="false" />
        <Property Name="SingleValue" Type="Edm.Single" DefaultValue="-INF" Nullable="false" />
        <Property Name="DecimalValue" Type="Edm.Decimal" Scale="variable" DefaultValue="34.95" Nullable="false" />
        <Property Name="StringValue" Type="Edm.String" DefaultValue="Say &quot;Hello&quot;,&#x0A;then go" Nullable="false" />
        <Property Name="DateValue" Type="Edm.Date" DefaultValue="2012-12-03" Nullable="false" />
        <Property Name="DateTimeOffsetValue" Type="Edm.DateTimeOffset" DefaultValue="2012-12-03T07:16:23Z" Nullable="false" />
        <Property Name="DurationValue" Type="Edm.Duration" Precision="12" DefaultValue="P12DT23H59M59.999999999999S"
          Nullable="false" />
        <Property Name="TimeOfDayValue" Type="Edm.TimeOfDay" Precision="6" DefaultValue="07:59:59.999" Nullable="false" />
        <Property Name="GuidValue" Type="Edm.Guid" DefaultValue="1234567-89ab-cdef-0123-456789abcdef" Nullable="false" />
        <Property Name="Int64Value" Type="Edm.Int64" DefaultValue="0" Nullable="false" />
        <Property Name="ColorEnumValue" Type="M1.Color" DefaultValue="yellow" Nullable="false" />
        <Property Name="GeographyPoint" Type="Edm.GeographyPoint" DefaultValue="SRID=0;Point(142.1 64.1)" Nullable="false" />
        <Property Name="StreamValue" Type="Edm.Stream" Nullable="false" />
        <Property Name="TypeDefValue" Type="M1.IntegerDecimal" Precision="20" DefaultValue="42" Nullable="false" />
        <Property Name="TextValue" Type="M1.Text" MaxLength="60" DefaultValue="42" Nullable="false" />
        <Property Name="PrimitiveValue" Type="Edm.PrimitiveType" Nullable="false" />
      </ComplexType>

      <Function Name="CreatedEntities">
        <Parameter Name="before" Type="Edm.DateTimeOffset" Nullable="true" />
        <Parameter Name="after" Type="Edm.DateTimeOffset" Nullable="true" />
        <ReturnType Type="Collection(Edm.EntityType)" Nullable="true" />
      </Function>
      <Function Name="TopSellingProducts">
        <Parameter Name="Year" Type="Edm.Decimal" Precision="4" Scale="0" Nullable="true" />
        <ReturnType Type="Collection(self.Product)">
          <Annotation Term="A.B" String="Works" />
        </ReturnType>
      </Function>
      <Annotation Term="UI.ReferenceFacet" AnnotationPath="@UI.LineItem" />
      <Annotation Term="UI.ReferenceFacet" AnnotationPath="Product/Supplier/@UI.LineItem" Qualifier="OnNavPropTarget" />
      <Annotation Term="UI.ReferenceFacet" AnnotationPath="Product/Supplier/@UI.LineItem" Qualifier="OnNavProp" />
      <Annotation Term="UI.ReferenceFacet" AnnotationPath="Product/Supplier/@UI.LineItem#Tablet" Qualifier="OnNavPropQualified" />
      <Annotation Term="UI.ReferenceFacet" UrlRef="http://LineItem" Qualifier="ViaUrl" />
      <Annotation Term="UI.ReferenceFacet" AnnotationPath="@X.Supplier#X/Contacts/@Y.ViewVariants" Qualifier="complicated" />

      <Annotation Term="UI.HyperLink" NavigationPropertyPath="Supplier" />

      <Annotation Term="Is.Null">
        <Annotation Term="Is.NextToNull" />
        <Null>
          <Annotation Term="Is.WithinNull" />
        </Null>
      </Annotation>

      <Annotation Term="UI.SubTitle">
        <Annotation Term="A.Constant" />
        <Int>1234</Int>
      </Annotation>

      <Annotation Term="A.Bool" Bool="true">
        <Annotation Term="A.AnnotatedBool" />
      </Annotation>
      <Annotation Term="A.Decimal" Decimal="12.34" />
      <Annotation Term="A.Decimal" Decimal="INF" Qualifier="inf" />
      <Annotation Term="A.Decimal" Decimal="-INF" Qualifier="minusInf" />
      <Annotation Term="A.Decimal" Decimal="NaN" Qualifier="nan" />
      <Annotation Term="A.Float" Float="1.23456789e4" />
      <Annotation Term="A.Float" Float="INF" Qualifier="inf" />
      <Annotation Term="A.Float" Float="-INF" Qualifier="minusInf" />
      <Annotation Term="A.Float" Float="NaN" Qualifier="nan" />
      <Annotation Term="A.NumericValues" Qualifier="Element">
        <Collection>
          <Float>1.23456789e4</Float>
          <Float>-2E80</Float>
          <Float>-INF</Float>
          <Float>INF</Float>
          <Float>NaN</Float>
          <Decimal>1.23456789e4</Decimal>
          <Decimal>-2E80</Decimal>
          <Decimal>-INF</Decimal>
          <Decimal>INF</Decimal>
          <Decimal>NaN</Decimal>
        </Collection>
      </Annotation>
      <Annotation Term="An.Int" Int="1234" />
      <Annotation Term="A.Very_Long_Int" Int="9007199254740992" />
      <Annotation Term="A.String" String="1.23e4" />
      <Annotation Term="A.String" String="Fast&amp;Furious" Qualifier="withAmp" />
      <Annotation Term="A.String" Qualifier="ToBeEscaped">
        <String>A/"good"&#x0D;&#x0A;story\for&#x09;kids</String>
      </Annotation>

      <Annotation Term="A.Guid" Guid="86a96539-871b-45cf-b96b-93dbc235105e" />
      <Annotation Term="A.Guid" Qualifier="Element">
        <Guid>86a96539-871b-45cf-b96b-93dbc235105e</Guid>
      </Annotation>

      <Annotation Term="A.Date" Date="2013-10-09" />

      <Annotation Term="Capabilities.UpdateRestrictions">
        <Record>
          <PropertyValue Property="Updatable" Bool="true" />
          <PropertyValue Property="NonUpdatableNavigationProperties">
            <Annotation Term="Core.Description" String="These navigation properties don't allow PATCH" />
            <Collection>
              <NavigationPropertyPath>Supplier</NavigationPropertyPath>
              <NavigationPropertyPath>Category</NavigationPropertyPath>
            </Collection>
          </PropertyValue>
        </Record>
      </Annotation>

      <Annotation Term="SearchVocabulary.SearchResult">
        <Record>
          <PropertyValue Property="Title" Path="Name" />
          <PropertyValue Property="Abstract" Path="Description" />
          <PropertyValue Property="Url">
            <Apply Function="odata.concat">
              <Annotation Term="Is.InApply" />
              <String>Products(</String>
              <Path>ID</Path>
              <String>)</String>
            </Apply>
          </PropertyValue>
        </Record>
      </Annotation>

      <Annotation Term="org.example.display.DisplayName" Qualifier="if">
        <If>
          <Annotation Term="Is.InIf" />
          <Path>IsFemale</Path>
          <String>Female</String>
          <String>Male</String>
        </If>
      </Annotation>

      <Annotation Term="UI.CollectionFacet" Qualifier="Contacts">
        <Collection>
          <AnnotationPath>Supplier/@Communication.Contact</AnnotationPath>
          <AnnotationPath>Customer/@Communication.Contact</AnnotationPath>
        </Collection>
      </Annotation>
      <Annotation Term="Some.Thing">
        <And>
          <Or>
            <Eq>
              <Ge>
                <Annotation Term="Is.InGe" />
                <Null />
                <Null />
              </Ge>
              <Gt>
                <Null />
                <Null />
              </Gt>
            </Eq>
            <Ne>
              <Lt>
                <Null />
                <Null />
              </Lt>
              <Null />
            </Ne>
          </Or>
          <Not>
            <Le>
              <Float>INF</Float>
              <Null />
            </Le>
          </Not>
        </And>
      </Annotation>
      <Annotation Term="Is.OneleggedIf">
        <If>
          <Bool>true</Bool>
          <Path>Then</Path>
        </If>
      </Annotation>
      <Annotation Term="Is.TwoleggedIf">
        <If>
          <Bool>false</Bool>
          <Path>Then</Path>
          <Path>Else</Path>
        </If>
      </Annotation>

      <EnumType Name="Size" IsFlags="false">
        <Annotation Term="Core.Description" String="T-Shirt Size" />
        <Annotation Term="Core.Description" String="Size (S, M, L)" Qualifier="alt" />
        <Annotation Term="Core.LongDescription" String="Size, expressed with letters familiar from e.g. T-Shirt sizes" />
        <Member Name="S">
          <Annotation Term="Core.Description" String="Small" />
        </Member>
        <Member Name="M">
          <Annotation Term="Core.Description" String="Medium" />
        </Member>

        <Member Name="L">
          <Annotation Term="Core.Description" String="Large" />
        </Member>

      </EnumType>

      <EnumType Name="Color" UnderlyingType="Edm.Int64" IsFlags="true">
        <Member Name="Yellow" Value="1">
          <Annotation Term="Is.Working" />
          <Annotation Term="Is.Testing">
            <IsOf Type="Edm.Binary">
              <Path>Hugo</Path>
            </IsOf>
          </Annotation>
        </Member>
        <Member Name="Striped" Value="2">
          <Annotation Term="Core.Description" String="nicely striped" />
        </Member>
      </EnumType>

      <EntityType Name="Weird">
        <Key>
          <PropertyRef Name="TheKey" />
        </Key>
        <Property Name="TheKey" Type="Edm.String" Nullable="false" />
        <Property Name="TheValue" Type="Edm.String" MaxLength="max" Nullable="true" />
        <Property Name="TheString" Type="Edm.String" MaxLength="20" />
        <Property Name="Tags" Type="Collection(Edm.String)" Nullable="true" />
        <Property Name="Dates" Type="Collection(Edm.Date)" Nullable="true" />
        <Property Type="Edm.Decimal" Name="Price" Precision="15" Scale="3" />
        <Property Name="Permission" Type="Org.OData.Core.V1.Permission" Nullable="false" />
        <Property Name="AliasPermission" Type="Core.Permission" />
        <Annotation Term="A.CollectionOfStrings">
          <Annotation Term="Core.Description" String="String-valued expressions" />
          <Collection>
            <String>SomeString</String>
            <Path>MyAddress/vCard.Address#work/Street</Path>
            <LabeledElement Name="Attribute" String="Hello" />
            <LabeledElementReference>Model1.Attribute</LabeledElementReference>
            <LabeledElement Name="Element">
              <String>Hello</String>
            </LabeledElement>
            <LabeledElementReference>Model1.Element</LabeledElementReference>
          </Collection>
        </Annotation>
        <Annotation Term="A.CollectionOfRecords">
          <Annotation Term="Core.Description" String="Record-valued expressions" />
          <Collection>
            <Record>
              <PropertyValue Property="Egon" String="1" />
              <PropertyValue Property="Hugo" String="2">
                <Annotation Term="Some.Term" String="Some Value" />
              </PropertyValue>
              <Annotation Term="Some.Term" String="Some Value" />
            </Record>
            <LabeledElement Name="Record">
              <Record />
            </LabeledElement>
            <LabeledElementReference>Model1.Record</LabeledElementReference>
          </Collection>
        </Annotation>
        <Annotation Term="A.GIQSupplier">
          <UrlRef>
            <String>http://www.odata.org</String>
          </UrlRef>
        </Annotation>
        <Annotation Term="A.GIQSupplier" Qualifier="two" UrlRef="http://www.odata.org" />
        <Annotation Term="A.GIQSupplier" Qualifier="three">
          <UrlRef>
            <Apply Function="odata.fillUriTemplate">
              <String>http://host/service/Suppliers({suppID})</String>
              <LabeledElement Name="suppID">
                <Apply Function="odata.UriEncode">
                  <Path>SupplierId</Path>
                  <DateTimeOffset>2013-04-08T23:00:00.0Z</DateTimeOffset>
                </Apply>
              </LabeledElement>
            </Apply>
          </UrlRef>
        </Annotation>
        <Annotation Term="org.example.display.DisplayName" Qualifier="cast">
          <Cast MaxLength="30" Type="Edm.String">
            <String>Product Catalog</String>
          </Cast>
        </Annotation>
        <Annotation Term="org.example.display.DisplayName" Qualifier="cast2">
          <Cast Precision="30" Scale="variable" Type="Edm.Decimal">
            <Float>3.14</Float>
          </Cast>
        </Annotation>
        <Annotation Term="self.IsFloatingDecimal">
          <IsOf Scale="variable" Type="Edm.Decimal">
            <Path>Customer/$count</Path>
          </IsOf>
        </Annotation>
        <Annotation Term="Some.Binary" Binary="Zg" Qualifier="two" />
        <Annotation Term="Some.Binary" Binary="Zg==" Qualifier="twoEqEq" />
        <Annotation Term="Some.Binary" Binary="Zm8" Qualifier="three" />
        <Annotation Term="Some.Binary" Binary="Zm8=" Qualifier="threeEq" />
        <Annotation Term="Some.Binary">
          <Binary>HugoHase-_ab</Binary>
        </Annotation>
      </EntityType>

      <ComplexType Name="Address" OpenType="true">
        <Property Name="Street" Type="Edm.String" />
        <NavigationProperty Name="City" Type="M1.City" />
        <NavigationProperty Name="Region" Type="M1.Region" />
        <NavigationProperty Name="Country" Type="M1.Country" />
        <Property Name="MapLocation" Type="Edm.GeographyPoint" SRID="variable" />
        <Property Name="Numbers" Type="Collection(Edm.Int16)" />
      </ComplexType>

      <EntityType Name="City" HasStream="true">
      </EntityType>

      <EntityType Name="Region" HasStream="false">
      </EntityType>

      <EntityType Name="Country">
      </EntityType>

      <EntityType Name="Planet">
      </EntityType>

      <ComplexType Name="NavigationOnly">
        <NavigationProperty Name="Planet" Type="M1.Planet" />
      </ComplexType>

      <ComplexType Name="AnnotationOnly" Abstract="false">
        <Annotation Term="Some.Tag" />
      </ComplexType>

      <EntityType Name="Order" Abstract="true">
        <Property Name="Quantity" Type="Edm.Decimal">
          <Annotation Term="Measures.Unit" Path="ShippingUnit" />
          <Annotation Term="Validation.Minimum" Decimal="0" />
        </Property>
        <Property Name="ShippingUnit" Type="Edm.String">
          <Annotation Term="Core.Description" String="Contains the unit for property Quantity" />
        </Property>
      </EntityType>

      <ComplexType Name="Validated">
        <Property Name="EvenNumber" Type="Edm.Int32">
          <Annotation Term="Validation.MultipleOf" Decimal="2" />
        </Property>
        <Property Name="PercentComplete" Type="Edm.Byte">
          <Annotation Term="Validation.Maximum" Decimal="100" />
        </Property>
        <Property Name="Epsilon" Type="Edm.Decimal">
          <Annotation Term="Validation.Minimum" Decimal="0">
            <Annotation Term="Validation.Exclusive" />
          </Annotation>
          <Annotation Term="Validation.Maximum" Decimal="1">
            <Annotation Term="Validation.Exclusive" Bool="true" />
          </Annotation>
        </Property>
        <Property Name="Temperature" Type="Edm.Decimal">
          <Annotation Term="Validation.Minimum" Decimal="0">
            <Annotation Term="Validation.Exclusive" Bool="false" />
          </Annotation>
        </Property>
        <Property Name="EmailAddress" Type="Edm.String">
          <Annotation Term="Validation.Pattern" String="^.+@.+\..+$" />
        </Property>
      </ComplexType>

      <TypeDefinition Name="SpecialByte" UnderlyingType="Edm.Byte" />

      <TypeDefinition Name="Text50" MaxLength="50" UnderlyingType="Edm.String" />

      <TypeDefinition Name="Text" UnderlyingType="Edm.String" />

      <TypeDefinition Name="LanguageDependentText" UnderlyingType="Edm.String">
        <Annotation Term="Core.IsLanguageDependent">
          <Annotation Term="Core.DefaultLanguage" String="en-US" />
        </Annotation>
      </TypeDefinition>

      <TypeDefinition Name="IntegerDecimal" UnderlyingType="Edm.Decimal" Scale="0">
        <Annotation Term="Core.Description" String="A decimal without fractional part" />
      </TypeDefinition>

      <TypeDefinition Name="IntegerDecimal10" UnderlyingType="Edm.Decimal" Precision="10">
        <Annotation Term="Core.Description" String="A ten-digit integer" />
      </TypeDefinition>

      <TypeDefinition Name="VariableDecimal" UnderlyingType="Edm.Decimal" Scale="variable">
        <Annotation Term="Core.Description" String="A floating decimal" />
      </TypeDefinition>

      <TypeDefinition Name="ExactTimestamp" UnderlyingType="Edm.DateTimeOffset" Precision="12" />

    </Schema>

    <!-- Examples for ODATA-535 -->
    <Schema Namespace="X">
      <Term Name="Person" Type="X.PersonType" />
      <ComplexType Name="PersonType">
        <!-- properties -->
      </ComplexType>
      <Term Name="Team" Type="Collection(X.PersonType)">
        <Annotation Term="custom.ItemIsA" String="X.Person" />
      </Term>
      <Term Name="Movie" Type="X.MovieType" Nullable="false" />
      <ComplexType Name="MovieType">
        <!-- properties -->
      </ComplexType>
      <Term Name="Friend" Type="X.FriendType" /> <!-- X.FriendType is an EntityType -->
      <EntityType Name="FriendType">
        <!-- properties -->
      </EntityType>
    </Schema>
    <Schema Namespace="Y">
      <Term Name="Developer" BaseTerm="X.Person" Type="Y.DeveloperType" Nullable="false" />
      <ComplexType Name="DeveloperType" BaseType="X.PersonType">
        <!-- additional properties -->
      </ComplexType>

      <Annotations Target="Some.EntityType">
        <Annotation Term="X.Person">
          <Record>
            <!-- property values defined on X.PersonType go here -->
          </Record>
        </Annotation>
        <Annotation Term="Y.Developer">
          <Record>
            <!-- property values not already specified in the base term annotation go here -->
          </Record>
        </Annotation>
        <Annotation Term="Org.OData.Core.V1.Description" String="External description" />
        <Annotation Term="Org.OData.Core.V1.Description" String="Alternative description" Qualifier="alt" />
        <Annotation Term="Core.Description" Qualifier="WithPath" Path="SomeProperty" />
      </Annotations>

      <Term Name="DevelopmentTeam" Type="Collection(Y.DeveloperType)">
        <Annotation Term="custom.ItemIsA" String="Y.Developer" />
        <Annotation Term="custom.IsA" String="X.Team" />
        <!--
          cannot express that with BaseType because it would be hard to have
          both a DevelopmentTeam and a Team annotation and then correlate the records
        -->
      </Term>

      <Annotations Target="Some.EntityType">
        <Annotation Term="Y.DevelopmentTeam">
          <Annotation Term="custom.IsA" String="X.Team" />
          <Path>SomeCollectionNavProp/@Y.Developer</Path>
        </Annotation>
      </Annotations>

      <Term Name="ScrumTeam" BaseTerm="Y.DevelopmentTeam" Type="Y.ScrumTeamType" />
      <ComplexType Name="ScrumTeamType">
        <Property Name="ScrumMaster" Type="Y.DeveloperType">
          <Annotation Term="custom.IsA" String="Y.Developer X.Person" />
        </Property>
      </ComplexType>
      <Annotations Target="Some.EntityType">
        <Annotation Term="Y.ScrumTeam">
          <Record>
            <PropertyValue Property="ScrumMaster">
              <Annotation Term="custom.IsA" String="Y.Developer X.Person" />
              <!--
                cannot express that in complex type definition unless we make
                terms and types interchangeably everywhere
              -->
              <Record>
                <!-- property values for Y.DeveloperType go here -->
              </Record>
            </PropertyValue>
          </Record>
        </Annotation>
      </Annotations>

      <Term Name="Movies" Type="Collection(X.MovieType)" />
      <Annotations Target="Some.EntityType">
        <Annotation Term="Y.Movies">
          <Path>AllMyMovies</Path>
        </Annotation>
      </Annotations>


      <Annotations Target="self.MyEntityContainer/MyEntitySet/self.MyEntityType/MyProperty">
        <Annotation Term="Y.Movies">
          <Path>AllMyMovies</Path>
        </Annotation>
      </Annotations>


      <Term Name="ArchivedMovies" Type="Collection(Y.ArchivedMovieType)">
        <Annotation Term="custom.ItemIsA" String="X.Movie" />
      </Term>
      <ComplexType Name="ArchivedMovieType" BaseType="X.MovieType">
        <Annotation Term="custom.IsA" String="X.Movie" />
        <Property Name="ArchivedAt" Type="Edm.Date" />
      </ComplexType>
      <Annotations Target="Some.EntityType">
        <Annotation Term="Y.ArchivedMovies">
          <Annotation Term="custom.ItemIsA" String="X.Movie" />
          <Path>MoviesInStorage</Path>
        </Annotation>
      </Annotations>

      <Term Name="SomeThing" Type="Y.SomeThingType" />
      <ComplexType Name="SomeThingType">
        <Property Name="SomeProperty" Type="Edm.String" />
        <Property Name="Contacts" Type="Collection(X.PersonType)">
          <Annotation Term="custom.ItemIsA" String="X.Person" />
        </Property>
        <NavigationProperty Name="VIPs" Type="Collection(X.FriendType)">
          <Annotation Term="custom.ItemIsA" String="X.Friend" />
        </NavigationProperty>
      </ComplexType>
      <Annotations Target="Some.EntityType">
        <Annotation Term="Y.Something">
          <Record Type="Y.SomeDerivedType">
            <PropertyValue Property="SomeProperty" String="Some Thing" />
            <PropertyValue Property="AnotherProperty">
              <String>A string with spaces</String>
            </PropertyValue>
            <PropertyValue Property="SomeTime" Duration="P20D" />
            <PropertyValue Property="MoreTime">
              <Duration>P20D</Duration>
            </PropertyValue>
            <PropertyValue Property="Contacts">
              <Annotation Term="custom.ItemIsA" String="X.Person" />
              <Path>MyContacts</Path>
            </PropertyValue>
            <PropertyValue Property="VIPs">
              <Annotation Term="custom.ItemIsA" String="X.Person" />
              <Path>MyBestFriends</Path>
            </PropertyValue>
          </Record>
        </Annotation>
        <Annotation Term="Y.Something" Qualifier="referenced">
          <Record Type="Core.MessageType">
            <PropertyValue Property="message" String="Hello" />
          </Record>
        </Annotation>
      </Annotations>

      <Term Name="AdvancedChangeTracking" BaseTerm="Capabilities.ChangeTracking" Type="Y.ChangeTrackingType"
        AppliesTo="EntityContainer EntitySet" Nullable="false"
      >
        <Annotation Term="Core.Description" String="Advanced change tracking capabilities of this service or entity set" />
      </Term>
      <ComplexType Name="ChangeTrackingType">
        <Property Name="InlineableStreamProperties" Type="Collection(Edm.PropertyPath)">
          <Annotation Term="Core.Description" String="Change tracking supports inlining these stream properties" />
        </Property>
      </ComplexType>

      <Annotation Term="Core.Description">
        <Apply Function="odata.concat">
          <String>When: </String>
          <Apply Function="odata.now" />
        </Apply>
      </Annotation>

      <Term Name="Minimal" Type="Edm.String" Nullable="false" />

    </Schema>

    <Schema Namespace="ODATA1221">

      <EnumType Name="Color">
        <Member Name="Taupe" Value="1" />
        <Member Name="GreyBrown" Value="1" />
      </EnumType>

      <Annotation Term="True.Or.False">
        <Eq>
          <EnumMember>ODATA1221.Color/Taupe</EnumMember>
          <EnumMember>ODATA1221.Color/GreyBrown</EnumMember>
        </Eq>
      </Annotation>

    </Schema>

    <Schema Namespace="Intentionally.Empty" />

  </edmx:DataServices>
</edmx:Edmx>